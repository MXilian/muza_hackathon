from typing import List, Dict, Any

from src.llm.mistral_connector import MistralConnector
from src.utils.logger import log


# Генератор описаний музеев с ацентом на интереах пользователя
class MuseumDescriptionGenerator:
    def __init__(self, mistral_connector: MistralConnector):
        """
        Инициализация генератора описаний музеев.

        :param mistral_connector: Объект для интеграции с Mistral API.
        """
        self.mistral_connector = mistral_connector


    def generate_museum_descriptions(self, museums: List[Dict[str, Any]]) -> str:
        """
        Генерирует красивые описания для каждого музея с помощью Mistral.

        :param museums: Список музеев с информацией (название, описание, адрес, совпадающие интересы).
        :return: Строка с описаниями всех музеев, разделенными пустой строкой.
        """
        descriptions = []  # Список для хранения описаний музеев

        for museum in museums:
            log(f"[MuseumDescriptionGenerator] генерация описания для: {museum['name']}")
            # Формируем запрос для Mistral
            prompt = (
                f"Есть музей: {museum['name']}. "
                f"Описание музея: {museum['description']}. "
                f"Адрес музея: {museum['address']}. "
                f"К этому музею привязаны определенные категории интересов, и среди них с моими интересами совпадают следующие: {museum['matched_interest_names']}. "
                "Исходя из всех этих данных составьте краткое описание музея с логичным обоснованием, почему, на ваш взгляд, он может меня заинтересовать. "
                "\n\nФормат итогового текста:\n"
                "```\n"
                "'**<НАЗВАНИЕ МУЗЕЯ>**\n"
                "Адрес: _<адрес музея>_\n\n"
                "Описание музея с обоснованием, почему он может меня заинтересовать'\n"
                "```\n"
                "\n\nПример:\n"
                "'**Исторический музей**\n"
                "Адрес: _Красная площадь, 1, Москва_\n\n"
                "Поскольку вас интересует история Древней Руси, этот музей предлагает уникальную коллекцию древнерусских рукописей, "
                "оружия и предметов быта, которые помогут погрузиться в атмосферу тех времен. "
                "Также, учитывая ваш интерес к XX веку, экспозиции музея включают материалы о ключевых событиях эпохи — "
                "от революции до Великой Отечественной войны. Отдельного внимания заслуживает раздел народного творчества, "
                "созданный специально для ценителей традиционной культуры, таких, как вы: здесь представлены народные костюмы, "
                "глиняная посуда и другие произведения мастеров прошлого. Все эти экспонаты идеально соответствуют вашим увлечениям.'\n\n"
                "В ответ пришлите готовый текст без сопровождающих комментариев и лишних символов, "
                "а также без html тегов, нужен только текст с сохранением markdown разметки (как в моем примере). "
                "Допустимый размер описания: не более 350 символов (это критически важно!). Основной упор - не на описании, а на соответствии моим интересам - "
                "его нужно всячески подчеркивать."
            )

            # Отправляем запрос в Mistral
            response = self.mistral_connector.generate_text(prompt, temperature = 0.8)
            description = self.mistral_connector.extract_response_text(response)

            # Если описание успешно получено, добавляем его в список
            if description:
                log("[MuseumDescriptionGenerator] описание успешно сгенерировано!")
                descriptions.append(description)

        # Возвращаем накопленные описания
        return "|||".join(descriptions)